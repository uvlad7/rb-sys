---
name: Integration
on:
  push:
    branches:
      - main
  pull_request: {}

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  test:
    name: ${{ matrix.repo.slug }} (ruby=${{ matrix.ruby }}, os=${{ matrix.os }})
    strategy:
      fail-fast: false
      matrix:
        repo:
          - name: "uvlad7/oxi-test"
            slug: oxi-test
            ref: main
            run: rake
          - name: "matsadler/magnus"
            slug: magnus-0.5
            ref: "0.5.4"
            run: cargo test
          - name: "matsadler/magnus"
            slug: magnus-head
            ref: "05359fcd2369f014570f1e417c7c2d462625af5e"
            run: cargo test
        os: ["ubuntu-latest", "windows-latest", "macos-latest"]
        rust: ["stable"]
        ruby: ["2.7", "3.2", "ruby-head"]
        include:
          - repo:
              name: "uvlad7/oxi-test"
              slug: oxi-test
              ref: main
              run: rake
            os: "ubuntu-latest"
            rust: "stable"
            ruby: jruby-9.4.3.0
          - repo:
              name: "uvlad7/oxi-test"
              slug: oxi-test
              ref: main
              run: rake
            os: "macos-latest"
            rust: "stable"
            ruby: jruby-9.4.3.0
        # Should re-include these after unstable-api is enabled
        exclude:
          - os: windows-latest
            ruby: ruby-head
            repo:
              name: "matsadler/magnus"
              slug: magnus-head
              ref: "05359fcd2369f014570f1e417c7c2d462625af5e"
              run: cargo test
          - os: windows-latest
            ruby: ruby-head
            repo:
              name: "matsadler/magnus"
              slug: magnus-0.5
              ref: "0.5.4"
              run: cargo test
          # Should re-include this after build on windows is fixed
          - repo:
              name: "uvlad7/oxi-test"
              slug: oxi-test
              ref: main
              run: rake
            os: "windows-latest"
            rust: "stable"
            ruby: jruby-9.4.3.0

    runs-on: ${{ matrix.os }}
    steps:
      - name: Log matrix
        shell: bash
        env:
          INPUTS: ${{ toJSON(matrix) }}
        run: |
          echo "$INPUTS" | jq
      - uses: actions/checkout@v4
        with:
          repository: ${{ matrix.repo.name }}
          ref: ${{ matrix.repo.ref }}
          path: repo
      - uses: actions/checkout@v4
        with:
          path: rb-sys
      - uses: actions/setup-java@v4
        if: startsWith( matrix.ruby, 'jruby')
        with:
          distribution: "temurin"
          java-version: "17"
      - uses: oxidize-rb/actions/setup-ruby-and-rust@v1
        id: setup
        with:
          cache-version: v2
          ruby-version: ${{ matrix.ruby }}
          rustup-toolchain: ${{ matrix.rust }}
      - name: ✏️ Replace rb-sys
        shell: bash
        run: |
          cd ./repo
          mkdir -p .cargo
          echo >> .cargo/config.toml
          echo "[patch.crates-io]" >> .cargo/config.toml
          echo "rb-sys = { path = \"../rb-sys/crates/rb-sys\" }" >> .cargo/config.toml
          cargo update -p rb-sys
          echo "RUBYOPT=-I${{ github.workspace }}/rb-sys/gem/lib" >> $GITHUB_ENV
          ruby -e "File.write('Gemfile', File.read('Gemfile').gsub(/gem .rb_sys.*$/, 'gem \"rb_sys\", path: \"../rb-sys/gem\"'))" || true
          bundle install -j3 --retry 3 || true
      - name: 🧪 Run tests for ${{ matrix.repo.slug }}
        shell: bash
        run: |
          cd ./repo
          ${{ matrix.repo.run }}
